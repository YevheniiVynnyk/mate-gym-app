import { api } from './api';

export const imageService = {
    // –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    /*async upload(file: File): Promise<number> {
		const formData = new FormData();

		formData.append("file", {
			uri: file.uri,
			type: file.type,
			name: file.name,
		} as any); // <- –≤–∞–∂–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç —Ñ–æ—Ä–º–∞—Ç–∞ RN

		const response = await api.post<number>("/images/upload", formData, {
			headers: {
				"Content-Type": "multipart/form-data",
			},
		});
		return response.data;
	},/*/
    // –¢–µ–ø–µ—Ä—å –ø—Ä–∏–Ω–∏–º–∞–µ–º 'fileData' –∫–∞–∫ any, —á—Ç–æ–±—ã —É—á–µ—Å—Ç—å URI/–æ–±—ä–µ–∫—Ç –∏–∑ ImagePicker
    /*async upload(fileData: any): Promise<number> {
        const formData = new FormData();
        
        // üõ†Ô∏è –ö–ª—é—á–µ–≤–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: FormData –¥–ª—è React Native –∏ Expo Web
        // Expo/React Native —Ç—Ä–µ–±—É–µ—Ç, —á—Ç–æ–±—ã —Ñ–∞–π–ª –±—ã–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ { uri, name, type }
        // –ï—Å–ª–∏ –≤—ã –Ω–∞ React Native/Expo, 'fileData' –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–±—ä–µ–∫—Ç–æ–º:
        if (typeof fileData === 'object' && fileData.uri) {
             formData.append('file', {
                uri: fileData.uri,
                type: fileData.type || 'image/jpeg', // –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø MIME
                name: fileData.name || fileData.uri.split('/').pop(),
            } as any);
        } else {
             // –î–ª—è –æ–±—ã—á–Ω–æ–≥–æ Web (–µ—Å–ª–∏ ImagePicker –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç File/Blob)
             formData.append('file', fileData);
        }

        const response = await api.post<number>('/images/upload', formData, {
            // –ó–∞–≥–æ–ª–æ–≤–æ–∫ 'Content-Type' –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ FormData –æ–±—ã—á–Ω–æ –Ω–µ –Ω—É–∂–µ–Ω, 
            // —Ç–∞–∫ –∫–∞–∫ Axios/–±—Ä–∞—É–∑–µ—Ä —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –µ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å –Ω—É–∂–Ω—ã–º boundary.
            // –ù–æ –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏:
            headers: {
                // –í–ê–ñ–ù–û: –ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ FormData –≤ React Native –ù–ï —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ —ç—Ç–æ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤—Ä—É—á–Ω—É—é! 
                // –ï—Å–ª–∏ –≤—ã –Ω–∞ Expo Web/–±—Ä–∞—É–∑–µ—Ä–µ, –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å.
                // 'Content-Type': 'multipart/form-data', 
            },
        });
        return response.data;
    },
*/
    async upload(fileData: any): Promise<number> {
        // fileData - —Ü–µ –æ–±'—î–∫—Ç {uri, type, name}
        const formData = new FormData();

        // –¢—É—Ç –º–∞—î –±—É—Ç–∏ –ª–æ–≥—ñ–∫–∞ —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è formData, —è–∫ –º–∏ –æ–±–≥–æ–≤–æ—Ä—é–≤–∞–ª–∏ —Ä–∞–Ω—ñ—à–µ:
        // –¶–µ –∑–∞–±–µ–∑–ø–µ—á—É—î —Å—É–º—ñ—Å–Ω—ñ—Å—Ç—å –∑ URI, –æ—Ç—Ä–∏–º–∞–Ω–∏–º –≤—ñ–¥ expo-image-picker
        if (fileData.uri) {
            formData.append('file', {
                uri: fileData.uri,
                type: fileData.type || 'image/jpeg',
                name: fileData.name || 'photo.jpg',
            } as any);
        } else {
            formData.append('file', fileData); // –î–ª—è –∑–≤–∏—á–∞–π–Ω–æ–≥–æ File API (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –Ω–∞ Web)
        }

        // –ö–õ–Æ–ß–û–í–ï –ó–ú–Ü–ù–ï–ù–ù–Ø: –ù–ï –ü–ï–†–ï–î–ê–Ñ–ú–û Content-Type –≤—Ä—É—á–Ω—É!
        // Axios/–±—Ä–∞—É–∑–µ—Ä/React Native —Å–∞–º –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π
        // Content-Type: multipart/form-data –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º boundary.
        const response = await api.post<number>('/images/upload', formData, {
            // –í–∏–¥–∞–ª—ñ—Ç—å –±–ª–æ–∫ headers: {...} –ø–æ–≤–Ω—ñ—Å—Ç—é –∞–±–æ –ø–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è,
            // —â–æ —Ç–∞–º –Ω–µ–º–∞—î Content-Type: 'application/json'
            headers: {},
        });
        return response.data;
    },
    // –ü–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ ID
    async get(id: number): Promise<Blob> {
        const response = await api.get(`/images/${id}`, {
            responseType: 'blob',
        });
        return response.data;
    },

    // –ü–æ–ª—É—á–∏—Ç—å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    getUrl(id: number): string {
        return `${api.defaults.baseURL}/images/${id}`;
    },
};
