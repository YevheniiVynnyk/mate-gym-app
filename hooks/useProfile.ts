import {useState, useCallback} from "react";
import * as ImagePicker from "expo-image-picker";
import {useAuth} from "@/contexts/AuthContext";
import {UserDTO, userService} from "@/services/userService";
import {fromUserDTO} from "@/services/mapper/userMapper";
import {imageService} from "@/services/imageService";
import {useNavigation} from "@/hooks/useNavigation";

// ‚úÖ –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –ü–û–î–°–ß–ï–¢–ê –í–û–ó–†–ê–°–¢–ê (–∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è –ª–æ–≥–∏–∫–∞)
const calculateAge = (birthdayString: string): number => {
    if (!birthdayString) return 0;
    
    try {
        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Date –∏–∑ —Å—Ç—Ä–æ–∫–∏ "YYYY-MM-DD"
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º ISO-—Ñ–æ—Ä–º–∞—Ç –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—à–∏–±–æ–∫ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
        const birthday = new Date(birthdayString);
        if (isNaN(birthday.getTime())) return 0;

        const today = new Date();
        let age = today.getFullYear() - birthday.getFullYear();
        const monthDifference = today.getMonth() - birthday.getMonth();

        // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü —Ä–∞–Ω—å—à–µ –º–µ—Å—è—Ü–∞ —Ä–æ–∂–¥–µ–Ω–∏—è, –∏–ª–∏
        // –µ—Å–ª–∏ –º–µ—Å—è—Ü—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ, –Ω–æ –¥–µ–Ω—å —Ä–∞–Ω—å—à–µ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è, —É–º–µ–Ω—å—à–∞–µ–º –≤–æ–∑—Ä–∞—Å—Ç –Ω–∞ 1.
        if (monthDifference < 0 || (monthDifference === 0 && today.getDate() < birthday.getDate())) {
            age--;
        }
        return age > 0 ? age : 0;
    } catch (e) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á–µ—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç–∞:", e);
        return 0;
    }
};

export const useProfile = () => {
	const [isEditing, setIsEditing] = useState(false);
	const [isPrivacyDialogOpen, setIsPrivacyDialogOpen] = useState(false);
	const [loading, setLoading] = useState(false);

	const {user, logout, setUser} = useAuth();
	const router = useNavigation();

	const [formDataUser, setFormDataUser] = useState({
		firstName: user?.firstName || "",
		lastName: user?.lastName || "",
		email: user?.email || "",
		login: user?.login || "",
		phoneNumber: user?.phoneNumber || "",
		age: user?.age?.toString() || "",
		// ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º birthday. –°–µ—Ä–≤–µ—Ä –æ–∂–∏–¥–∞–µ—Ç "YYYY-MM-DD".
        birthday: user?.birthday || "",
		goals: (user as any)?.goals || "",
		status: (user as any)?.status || "",
		role: user?.role || "",
		trainerId: (user as any)?.trainerId?.toString() || "",
	});
// ‚úÖ –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –£–°–¢–ê–ù–û–í–ö–ò –í–û–ó–†–ê–°–¢–ê
    const setFormDataUserWithAge = useCallback((newBirthday: string) => {
        const calculatedAge = calculateAge(newBirthday);
        
        setFormDataUser(prev => ({
            ...prev,
            birthday: newBirthday,
            // üéØ –û–ë–ù–û–í–õ–Ø–ï–ú age –ù–ê –û–°–ù–û–í–ï –†–ê–°–°–ß–ò–¢–ê–ù–ù–û–ì–û –ó–ù–ê–ß–ï–ù–ò–Ø
            age: calculatedAge.toString(), 
        }));
    }, [setFormDataUser]);

	// üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
	const handleSaveUser = async () => {
		if (!user) return;
		try {
			setLoading(true);
			// üéØ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –∏–∑ formDataUser, 
            // –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞—à–µ–π —Ñ—É–Ω–∫—Ü–∏–µ–π setFormDataUserWithAge
            const finalAge = Number(formDataUser.age) || 0;

			const updatedUser: UserDTO = {
				...user,
				...formDataUser,
				age: finalAge,
				// ‚úÖ birthday ‚Äî —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, —É–∂–µ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤ "YYYY-MM-DD"
                birthday: formDataUser.birthday,
				role: (formDataUser.role || user.role) as UserDTO["role"],
			};
// –ü–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π:
console.log("Saving user with birthday:", updatedUser.birthday);
			await userService.updateUser(updatedUser);
			// –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–µ–π—Ç–∞:
const finalUser = fromUserDTO(updatedUser);
			console.log("Local user set to birthday:", finalUser.birthday);
			setUser(finalUser);
			setIsEditing(false);
		} catch (err) {
			console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:", err);
		} finally {
			setLoading(false);
		}
	};

	// üì∏ –ó–∞–≥—Ä—É–∑–∫–∞ –∞–≤–∞—Ç–∞—Ä–∫–∏
	const pickAvatar = async () => {
		try {
			const result = await ImagePicker.launchImageLibraryAsync({
				mediaTypes: ["images"], // ‚úÖ –Ω–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å (–≤–º–µ—Å—Ç–æ MediaTypeOptions)
				quality: 0.8,
				allowsEditing: true,
				aspect: [1, 1],
			});

			if (!result.canceled) {
				const asset = result.assets[0];
				const fileData = {
					uri: asset.uri,
					type: asset.mimeType || "image/jpeg",
					name: asset.fileName || "avatar.jpg",
				};

				setLoading(true);
				const id = await imageService.upload(fileData);

				// ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—Ç–µ–π—Ç
				setUser((prev) => (prev ? {...prev, imageId: id} : prev));
				console.log("‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ. ID:", id);
			}
		} catch (err) {
			console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", err);
		} finally {
			setLoading(false);
		}
	};

	// üö™ –í—ã—Ö–æ–¥
	const handleLogout = async () => {
		await logout();
		router.toHome();
	};

	return {
		user,
		formDataUser,
		setFormDataUser,
		isEditing,
		setFormDataUserWithAge,
		setIsEditing,
		isPrivacyDialogOpen,
		setIsPrivacyDialogOpen,
		pickAvatar,
		handleSaveUser,
		handleLogout,
		loading,
	};
};