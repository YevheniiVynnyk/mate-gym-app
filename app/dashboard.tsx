import React from "react";
import {ScrollView, Text, TouchableOpacity, View} from "react-native";
import {Calendar, Plus, Target, TrendingUp, UserRoundPen} from "lucide-react-native";
import {useAuth} from "@/contexts/AuthContext";
import {useDashboardData} from "@/hooks/useDashboardData";
import {StatCard} from "@/components/dashboard/StatCard";
import {ActionCard} from "@/components/dashboard/ActionCard";
import TrainingCard from "@/components/trainingDay/TrainingCard";
import {useNavigation} from "@/hooks/useNavigation";

export default function Dashboard() {
	const router = useNavigation();
	const {user} = useAuth();
	const {trainingDays, quickStats, loading} = useDashboardData();
	if (loading) {
		return (
			<View className="flex-1 items-center justify-center">
				<Text className="text-gray-500">–ó–∞–≥—Ä—É–∑–∫–∞...</Text>
			</View>
		);
	}

	return (
		<ScrollView className="flex-1" showsVerticalScrollIndicator={false}>
			{/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
			<View className="bg-white p-4 rounded-xl mb-4">
				<Text className="text-xl font-bold">
					–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user?.firstName || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"}!
				</Text>
				<Text className="text-gray-600 mt-1">
					–ì–æ—Ç–æ–≤—ã –∫ –Ω–æ–≤–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ? –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –∑–∞–ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞–Ω—è—Ç–∏–µ.
				</Text>
			</View>

			{/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
			{quickStats && (
				<View className="my-4 p-2">
					<Text className="text-lg font-bold mb-2">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</Text>
					<View className="flex-row justify-between">
						<StatCard title="–í—Å–µ–≥–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫" value={quickStats.totalTrainings.toString()}/>
						<StatCard
							title="–ó–∞–≤–µ—Ä—à–µ–Ω–æ"
							value={quickStats.completedTrainings.toString()}
							subtitle={`${
								quickStats.totalTrainings
									? ((quickStats.completedTrainings / quickStats.totalTrainings) * 100).toFixed(0)
									: 0
							}% –æ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞`}
						/>
						<StatCard
							title="–û–±—â–µ–µ –≤—Ä–µ–º—è"
							value={quickStats.totalTimeMinutes.toString()}
							subtitle={`–í —Å—Ä–µ–¥–Ω–µ–º ${quickStats.averageDurationMinutes}`}
						/>
					</View>
				</View>
			)}

			{/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
			<View className="my-6 p-2">
				<Text className="text-lg font-bold mb-2">‚ö° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</Text>
				<View className="flex-row flex-wrap justify-between">
					<ActionCard icon={<Plus size={24} color="#22c55e"/>} label="–ù–æ–≤–∞—è"
								onPress={router.toCreateTrainingDay}/>
					<ActionCard icon={<Calendar size={24} color="#22c55e"/>} label="–ú–æ–∏"
								onPress={router.toTrainingList}/>
					<ActionCard icon={<TrendingUp size={24} color="#f59e0b"/>} label="–ü—Ä–æ–≥—Ä–µ—Å—Å"
								onPress={router.toProgress}/>
					<ActionCard icon={<UserRoundPen size={24} color="#f59e0b"/>} label="–ü—Ä–æ–≥—Ä–µ—Å—Å"
								onPress={router.toProfile}/>
				</View>
			</View>

			{/* –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ */}
			<View className="my-6 p-2">
				<Text className="text-lg font-bold mb-2">üìÖ –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏</Text>

				{trainingDays.length === 0 ? (
					<View className="items-center p-6">
						<Target size={48} color="#ccc"/>
						<Text className="text-gray-500 my-2">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫</Text>
						<TouchableOpacity
							className="flex-row items-center bg-green-500 px-4 py-2 rounded-lg"
							onPress={router.toCreateTrainingDay}
						>
							<Plus size={16} color="#fff"/>
							<Text className="text-white ml-2">–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É</Text>
						</TouchableOpacity>
					</View>
				) : (
					trainingDays.map((td) => <TrainingCard key={td.id} trainingDay={td}/>)
				)}
			</View>
		</ScrollView>
	);
}